// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package room_info

import (
	"database/sql/driver"
	"fmt"
)

type RoomsState string

const (
	RoomsStateOpen      RoomsState = "open"
	RoomsStateLocked    RoomsState = "locked"
	RoomsStatePassword  RoomsState = "password"
	RoomsStateInvisible RoomsState = "invisible"
)

func (e *RoomsState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RoomsState(s)
	case string:
		*e = RoomsState(s)
	default:
		return fmt.Errorf("unsupported scan type for RoomsState: %T", src)
	}
	return nil
}

type NullRoomsState struct {
	RoomsState RoomsState `json:"rooms_state"`
	Valid      bool       `json:"valid"` // Valid is true if RoomsState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRoomsState) Scan(value interface{}) error {
	if value == nil {
		ns.RoomsState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RoomsState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRoomsState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.RoomsState), nil
}

type Room struct {
	ID                  int32      `json:"id"`
	OwnerID             int32      `json:"owner_id"`
	Name                string     `json:"name"`
	Description         string     `json:"description"`
	ModelID             int32      `json:"model_id"`
	Password            string     `json:"password"`
	State               RoomsState `json:"state"`
	Users               int32      `json:"users"`
	MaxUsers            int32      `json:"max_users"`
	FlatCategoryID      int32      `json:"flat_category_id"`
	Score               int32      `json:"score"`
	Floorpaper          string     `json:"floorpaper"`
	Wallpaper           string     `json:"wallpaper"`
	Landscape           string     `json:"landscape"`
	WallThickness       int32      `json:"wall_thickness"`
	WallHeight          int32      `json:"wall_height"`
	FloorThickness      int32      `json:"floor_thickness"`
	Tags                string     `json:"tags"`
	IsPublic            bool       `json:"is_public"`
	IsStaffPicked       bool       `json:"is_staff_picked"`
	AllowOtherPets      bool       `json:"allow_other_pets"`
	AllowOtherPetsEat   bool       `json:"allow_other_pets_eat"`
	AllowWalkthrough    bool       `json:"allow_walkthrough"`
	IsWallHidden        bool       `json:"is_wall_hidden"`
	ChatMode            int32      `json:"chat_mode"`
	ChatWeight          int32      `json:"chat_weight"`
	ChatScrollingSpeed  int32      `json:"chat_scrolling_speed"`
	ChatHearingDistance int32      `json:"chat_hearing_distance"`
	ChatProtection      int32      `json:"chat_protection"`
	WhoCanMute          int32      `json:"who_can_mute"`
	WhoCanKick          int32      `json:"who_can_kick"`
	WhoCanBan           int32      `json:"who_can_ban"`
	RollerSpeed         int32      `json:"roller_speed"`
	IsPromoted          bool       `json:"is_promoted"`
	TradeMode           int32      `json:"trade_mode"`
	MoveDiagonal        bool       `json:"move_diagonal"`
	IsWiredHidden       bool       `json:"is_wired_hidden"`
	IsForsale           bool       `json:"is_forsale"`
}
